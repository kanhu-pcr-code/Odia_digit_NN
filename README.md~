# Odia_digit_NN
This is a project to implement Neural Network approach to recognise hand written odia digits.





# Generating Training set

## Hand written digits
1. Odia digits 0-9 were written on a lined paper and photo graphed using Android Phone Camera.
2. Images were cropped mauly using GIMP on ubuntu OS.

## Cropping images with GIMP and ImageMagic 
 Each stripp is cropped using Imagemagic Commands. each strip containig 5-6 digits

> http://stackoverflow.com/questions/9636350/using-imagemagick-how-can-i-slice-up-an-image-into-several-separate-images
> This cuts an image into 6 sections, 2 per row, with 40 pixels of horizontal padding 
> and 20 pixels of vertical padding excluded from each section:
> convert 17.png -crop 2x3-40-20@ +repage +adjoin tile-%d.jpg

> cuts an image into 5 sections, 1 per row, with 20 pixels of horizontal padding, 1 pixels of vertical padding excluded from each section
convert 17.png -crop 1x5-20-1@ +repage +adjoin tile-%d.jpg
About 10 training sets per digit created using several random windows settings.


## Converting images into grey scale
convert  9_1.jpg  -colorspace Gray   grey/9_1.jpg


## Per script to crop images 
perl -e '%gr=(1=>"center", 2=>"south",3=>"west",4=>"north",5=>"east",);@f=<*.jpg>; foreach $i(0..$#f){print "$f[$i] Gravity:(1:5)";$k=<STDIN>;chomp($k); $k=$gr{$k};system("convert  $f[$i]  -gravity $k  -crop 100x100+0+0 +repage -resize 20x -colorspace Gray   0_$i\.jpg")  }'


# OCTAVE processing

## Random trials
img = imread('grey/9_1.jpg')
imshow(img)
size(img)
ans =

   251   155

save -binary odia_9 img
